---
title: 'The 9 Best Programming Books I Have Read (so far)'
date: 2010-04-17T16:00:00.012+02:00
draft: false
tags : [Programming, Books]
---

Below you can find a non exhaustive list of the **best programming books I have read so far**. I have read a lot more books about programming, but most of them I read and promptly forgot about them. I am reading currently a few more ([Code Complete](https://www.amazon.com/gp/product/0735619670?ie=UTF8&tag=rbersblog-20&linkCode=as2&camp=1789&creative=390957&creativeASIN=0735619670)![](http://www.assoc-amazon.com/e/ir?t=rbersblog-20&l=as2&o=1&a=0735619670), [Thinking Forth](https://www.amazon.com/gp/product/0976458705?ie=UTF8&tag=rbersblog-20&linkCode=as2&camp=1789&creative=390957&creativeASIN=0976458705)![](http://www.assoc-amazon.com/e/ir?t=rbersblog-20&l=as2&o=1&a=0976458705)), and maybe they can make it into a list like this that my future self writes.

  

And now, the list of the best programming books I have read so far. I'm currently on and off with [Thinking Forth](https://www.amazon.com/gp/product/0976458705?ie=UTF8&tag=rbersblog-20&linkCode=as2&camp=1789&creative=390957&creativeASIN=0976458705), but it is still to early to tell if I like it. I like Forth programming (as I like Lisp, C or almost any other language...), and so far the book looks damn good. But there's a lot to learn from there and it will take me a while to grasp it... and consider turning this into a list of 10 books.  
  
Do you have a really good programming book to suggest? Please post it in the comments, I'll try to have a look at it.

  

* * *

  

[![Best Programming Books: Kernighan and Ritchie C](https://2.bp.blogspot.com/_f3d3llNlZKQ/S8IHWczgTSI/AAAAAAAACJE/JyTRUNS9aKs/s400/KRC.jpg "Best Programming Books: Kernighan and Ritchie C")](https://www.amazon.com/gp/product/0131101633?ie=UTF8&tag=rbersblog-20&linkCode=as2&camp=1789&creative=390957&creativeASIN=0131101633)

Kernighan & Ritchie's The C Programming Language  
  

This was one of the first programming books I read from cover to cover, and probably the only one I was really forced to do so. In my first year in the University, I was required to program in C, and previously I had only programmed in different flavours of Basic (Visual Basic, GW-Basic, QBasic) and Pascal (Turbo Pascal for MS-Dos and Windows). The first semester was ok, as we were taught the basics of the language, but I wanted more and started reading this book (loaned from the library). I like it a lot, learnt a lot and **I still think that its clear style and simple examples make it the best language specific programming book I will ever read**... If we don't pit it against the following. Obviously, this is a 'dry' book: I would never recommend it to someone who was beginning to learn programming... But he should eventually read it.  
  

[Buy on Amazon link](https://www.amazon.com/gp/product/0131101633?ie=UTF8&tag=rbersblog-20&linkCode=as2&camp=1789&creative=390957&creativeASIN=0131101633)![](http://www.assoc-amazon.com/e/ir?t=rbersblog-20&l=as2&o=1&a=0131101633)

* * *

  

[![](https://4.bp.blogspot.com/_f3d3llNlZKQ/S8IHV9u4qQI/AAAAAAAACI8/nXzki3AseIU/s400/ACL.jpg)](https://www.amazon.com/gp/product/0133708756?ie=UTF8&tag=rbersblog-20&linkCode=as2&camp=1789&creative=390957&creativeASIN=0133708756)

Paul Graham's ANSI Common Lisp  
  

**This is probably the programming book I have learnt more from.** I learnt about Lisp a long, long time ago, but stalled on it until I stumbled upon Graham's site, and read his somewhat inspiring history behind Viaweb. Decided to give it a try, and have loved this language since then. My first buy from Amazon was this great book, and won't ever regret having bought it, would probably even be one of my 10 books to take to a desert island. Worth a buy, and even a second buy to give it as a present to a programmer friend.

  

[Buy on Amazon link](https://www.amazon.com/gp/product/0133708756?ie=UTF8&tag=rbersblog-20&linkCode=as2&camp=1789&creative=390957&creativeASIN=0133708756)![](http://www.assoc-amazon.com/e/ir?t=rbersblog-20&l=as2&o=1&a=0133708756)

  
  

* * *

  

[![](https://2.bp.blogspot.com/_f3d3llNlZKQ/S8IHVQLocnI/AAAAAAAACI0/0avnoWneY6Y/s400/LL.jpg)](https://www.amazon.com/gp/product/0023397632?ie=UTF8&tag=rbersblog-20&linkCode=as2&camp=1789&creative=390957&creativeASIN=0023397632)

Friedman & Felleisen's The Little Lisper  
  

**A little and short gem among programming books**, teaches recursion, some programming and a little subset of the Lisp language to anybody in a short number of pages. It is worth a read, even if you have been into programming for a long time. Maybe just because it is a fun little book full of harmless jokes.

  

[Buy on Amazon link](https://www.amazon.com/gp/product/0023397632?ie=UTF8&tag=rbersblog-20&linkCode=as2&camp=1789&creative=390957&creativeASIN=0023397632)![](http://www.assoc-amazon.com/e/ir?t=rbersblog-20&l=as2&o=1&a=0023397632) 

  

  

  

**Update:** readers suggested that _The Little Schemer_ is better, these days (for price, mostly). But the same review applies

  

[Buy on Amazon link](https://www.amazon.com/gp/product/0023397632?ie=UTF8&tag=rbersblog-20&linkCode=as2&camp=1789&creative=390957&creativeASIN=0023397632)

* * *

  

[![](https://1.bp.blogspot.com/_f3d3llNlZKQ/S8ISCGmskVI/AAAAAAAACJQ/MFCN-E88fvk/s400/PPJM)](https://www.amazon.com/gp/product/020161622X?ie=UTF8&tag=rbersblog-20&linkCode=as2&camp=1789&creative=390957&creativeASIN=020161622X)

Hunt & Thomas' The Pragmatic Programmer: From Journeyman to Master  
  

This is probably one of the most recommended books on programming, and for a clear reason: **it will make your developer life easier, once you grasp everything it has to teach (although you can get a lot from day 1)**. Buy it. Now. And read it as soon as you have it.

  

[Buy on Amazon link](https://www.amazon.com/gp/product/020161622X?ie=UTF8&tag=rbersblog-20&linkCode=as2&camp=1789&creative=390957&creativeASIN=020161622X)

  

* * *

  

[![](https://3.bp.blogspot.com/_f3d3llNlZKQ/S8IGxw3T2JI/AAAAAAAACIs/yc1nAoFh5gA/s400/PLRM.jpg)](https://www.amazon.com/gp/product/0201379228?ie=UTF8&tag=rbersblog-20&linkCode=as2&camp=1789&creative=390957&creativeASIN=0201379228)

Adobe's Chapter 8 of The Postscript Programming Language Reference Manual  
  

The PPLRM is a huge book, with lots and lots of information. And yet, the only part I have ever used is _Chapter 8: Operators_. Almost anything can be found in here, if you know how stack-based languages go. Concise and to the point: is just a chapter on how operators work.

  

[Buy on Amazon link](https://www.amazon.com/gp/product/0201379228?ie=UTF8&tag=rbersblog-20&linkCode=as2&camp=1789&creative=390957&creativeASIN=0201379228) (full book, of course)

  

* * *

  

[![](https://2.bp.blogspot.com/_f3d3llNlZKQ/S8IGxgGDChI/AAAAAAAACIk/VPHqRNn-WpM/s400/BPN.jpg)](http://2.bp.blogspot.com/_f3d3llNlZKQ/S8IGxgGDChI/AAAAAAAACIk/VPHqRNn-WpM/s1600/BPN.jpg)

Watt & Mangada's Basic para niños  
  

This translates as Basic for kids, and it is a really lovely book. My first programming book, I learn a lot from it (although maybe too many goto's ;) It is a wonderful book for teaching programming to children between 5 and 11 years old. Do you readers know if there is something similar but up-to-date?

  

[Buy on Amazon link](https://amzn.to/2HC8ngI)

* * *

  

[![](https://1.bp.blogspot.com/_f3d3llNlZKQ/S8IGxRf3AQI/AAAAAAAACIc/LL2sRA0cJzA/s400/TYP24H)](https://www.amazon.com/gp/product/0672317354?ie=UTF8&tag=rbersblog-20&linkCode=as2&camp=1789&creative=390957&creativeASIN=0672317354)

SAMS' Teach Yourself Python in 24 hours  
  

Yes, I fell for the Teach Yourself _X_ in _N_ hours/days, but **this book is good**. It feels more like an introduction to the language than one of those standard rubbish books. But after a while, you grow to hate the Mayan calendar examples the author loves, sadly.

  

[Buy on Amazon link](https://www.amazon.com/gp/product/0672317354?ie=UTF8&tag=rbersblog-20&linkCode=as2&camp=1789&creative=390957&creativeASIN=0672317354)

* * *

  

[![](https://2.bp.blogspot.com/_f3d3llNlZKQ/S8IGxGk5TeI/AAAAAAAACIU/gd3gk3xokHI/s400/LJP)](https://www.amazon.com/gp/product/0262561158?ie=UTF8&tag=rbersblog-20&linkCode=as2&camp=1789&creative=390957&creativeASIN=0262561158)

  

Friedman & Felleisen's A Little Java: A Few Patterns

  

  

I though I should give a try to another Friedman-Felleisen combination. This is not as good as _The Little Lisper _mentioned above, but it does not mean it's bad. Just not the same type of book, and also I'm not specially fond of Java. Worth a read to get some insights about Java, but loaning from the library would be a safer bet. I would not probably buy it again.

  

[Buy on Amazon link](https://www.amazon.com/gp/product/0262561158?ie=UTF8&tag=rbersblog-20&linkCode=as2&camp=1789&creative=390957&creativeASIN=0262561158)

* * *

  

[![](https://1.bp.blogspot.com/_f3d3llNlZKQ/S8IGwluiYcI/AAAAAAAACIM/ajKGVUyx3so/s400/SICP)](https://www.amazon.com/gp/product/0262011530?ie=UTF8&tag=rbersblog-20&linkCode=as2&camp=1789&creative=390957&creativeASIN=0262011530)

Abelson & Sussman's The Structure and Interpretation of Computer Programs  
  

A classic one... Known as **The wizard book**, for its cover. But I think I just read half of the book, from re-reading the Contents. Maybe I forgot everything? Focused on programming in Scheme, **it teaches a lot about general computer science**. Worth having, but it is quite a dense read. It is freely available.

  

[Buy on Amazon link](https://www.amazon.com/gp/product/0262011530?ie=UTF8&tag=rbersblog-20&linkCode=as2&camp=1789&creative=390957&creativeASIN=0262011530)  
  
[Free html version link](http://mitpress.mit.edu/sicp/)

  

* * *

  

**Affiliate Link Disclaimer:** _For each sale that is made through the purchase links in this post I get a small commission (that does not affect your final purchase price!). Of course, I'd love if you bought this book through these links, but I have tried my best to make my review faithful. I don't want anyone to come later at me and say they were tricked into buying the book and the review was unfaithful to the book. Anyway, I won't get rich quickly (not even slowly) by these sales, but they will work toward paying the normal upkeep of this blog._

  
  
Related posts:  
  

 _[![](https://3.bp.blogspot.com/_f3d3llNlZKQ/S-VA4aF2G1I/AAAAAAAACT8/41SMm6kvdqs/s00/favicon.png)](http://www.mostlymaths.net/2010/08/and-e-appears-from-nowhere.html) [And e Appears From Nowhere!](http://www.mostlymaths.net/2010/08/and-e-appears-from-nowhere.html)_![](https://3.bp.blogspot.com/_f3d3llNlZKQ/S-VA4aF2G1I/AAAAAAAACT8/41SMm6kvdqs/s00/favicon.png) [C Code Juicer: Detecting Copied Programming Assignments](http://berenguel.blogspot.com/2009/12/c-code-juicer.html)  
![](https://3.bp.blogspot.com/_f3d3llNlZKQ/S-VA4aF2G1I/AAAAAAAACT8/41SMm6kvdqs/s00/favicon.png) [Cron, diff & wget: Watch Changes in a Webpage](http://berenguel.blogspot.com/2010/01/cron-diff-wget-watch-changes-in-webpage.html)  
![](https://3.bp.blogspot.com/_f3d3llNlZKQ/S-VA4aF2G1I/AAAAAAAACT8/41SMm6kvdqs/s00/favicon.png) [8 Reasons for Re-Inventing the Wheel as a Programmer](http://www.mostlymaths.net/2010/03/8-reasons-for-re-inventing-wheel-as.html)

![](https://3.bp.blogspot.com/_f3d3llNlZKQ/S-VA4aF2G1I/AAAAAAAACT8/41SMm6kvdqs/s00/favicon.png) [How I Got More Than 4500 Visits From Blog Commenting](http://www.mostlymaths.net/2010/11/how-i-got-more-than-4500-visits-through.html)  
![](https://3.bp.blogspot.com/_f3d3llNlZKQ/S-VA4aF2G1I/AAAAAAAACT8/41SMm6kvdqs/s00/favicon.png) [Approximating Images with Randomly Placed Translucent Triangles](http://www.mostlymaths.net/2010/04/approximating-images-with-randomly.html) (ended as a [Christmas Postcard](http://www.mostlymaths.net/2009/12/evolutionary-approximation-of-christmas.html))  
ParseList(ScrambleList(Relateds(Programming)),10)
