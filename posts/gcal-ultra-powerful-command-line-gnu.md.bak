---
title: 'Gcal the ultra-powerful command line GNU calendar'
date: 2010-04-15T16:00:00.004+02:00
draft: false
tags : [Linux, Gcal, NanoNote]
---

The [Ben NanoNote](http://www.mostlymaths.net/2010/03/unpacking-my-ben-nanonote.html) has very few applications, as of now. And one it has (among a few nice others), is Gcal. I didn't know what Gcal was, and the [Qi hardware wiki page on Gcal](http://en.qi-hardware.com/wiki/Ben_NanoNote_TimeZone_Date_and_Calendar_HOWTO#Installing_the_gcal_program) pointed me to this quite nice tutorial: [The many uses of Gcal](http://www.basicallytech.com/blog/index.php?/archives/97-The-many-uses-of-gcal.html).  

  
The tutorial is quite good, but somewhat long, and lacks a few specific examples, so I decided to write just what I read in that tutorial, mixed with the uses I am putting it to, so it is more a Gcal use cases than a full blown tutorial like that.  

  

Dear reader, if you find anything confusing, want a longer explanation or information about some command not explained here, feel free to post the question as a comment below, this will help everyone reading this.  

  

What can you use Gcal for? Gcal can be used for a lot of calendar related questions. A zillion calendar options (did you wonder what the old armenic months are?), more than you probably know about. Of course, if you are not a calendar freak, this is not the main selling point. Gcal works (and is intended to) as a diary, and appointment planner. It can also be used to determine sunset or sunshine in your local coordinates, and if you are an amateur astronomer, it can give you the twilight times. The same holds for data for the Moon, it can give you the moon phase, for instance.  

  

Hey, its already the 21st century! Command line? I can hear you mumbling How come I have to use a command-line calendar?'Of course, if you are into really pretty UIs... Skip this article. This is more for the Unix/Linux user who just pops open a terminal and shouts gcal -f $mycalendar when he wants to know what today is due.  

  

Ultra-portable & ultra-accessible. If you happen to have an ultraportable Linux thingy (like the NanoNote ;) you can carry your Gcal whenever you go. But if you have a fixed Linux box with Internet connection (at you office, at your server, wherever) you can ssh and run Gcal, from anywhere.  
  
First steps: Installing and month displays: Well, the first step is to have gcal installed. If you are on a Linux box, it is quite easy, as it is in all repositories.  

> sudo apt-get install gcal

Now you can run it, to get a calendar view of the current month (gcal). You can also view three months (gcal .), or a full year (gcal 2010). The command \-b N selects the number of month rows to display (gcal -b 4). You can also select a specific year, or range of months (gcal 3-5 2009). There is also an alternate month view (gcal -i). Below you can see this examples in a composition of terminal captures  

  

[![](http://4.bp.blogspot.com/_f3d3llNlZKQ/S7-_4U5NWcI/AAAAAAAACFk/xeJgoLWwmNQ/s400/Gcal1.png)](http://4.bp.blogspot.com/_f3d3llNlZKQ/S7-_4U5NWcI/AAAAAAAACFk/xeJgoLWwmNQ/s1600/Gcal1.png)  

Click to enlarge, and try by yourself!  

  

Resource files: your calendar and more, much more. The crux of Gcal is its ability to work with resource files. In a typical resource file example.gcal (the name and extension are of your choice) you have something that looks like  

> 0 This appears every day!  
> 20100410 This only on 2010, April 11th

Your diary will be something like this. You may wonder if this is enough... But I haven't told you what you can write and what you can do with these date fields! Some more examples  

> 2010apr01#99 All April  
> 2010apr01#may99 April&May  
> 2010aprsa1#sa9.7 April saturdays

The general notation for date ranges is date-identifier#final-date. Thus, we select the first day of April, and the event lasts until the 99th day, effectively marking all days of April. To mark all saturdays, a similar notation is used, but amazingly, a high number results in a error, please select 9 as in the sample. You can see a sample output in the following screenshot. You will also need to add .7, for each 7 days.  
  

[![](http://4.bp.blogspot.com/_f3d3llNlZKQ/S8CSF6_m3QI/AAAAAAAACFw/y7qzS9uKQ9U/s400/Selection_001.png)](http://4.bp.blogspot.com/_f3d3llNlZKQ/S8CSF6_m3QI/AAAAAAAACFw/y7qzS9uKQ9U/s1600/Selection_001.png)  
Click to enlarge  
  

You can also see how to call Gcal to open a resource file: with either \--resource-file or the \-f commands. To display the fixed date list (i.e. what there is in the resource file) you need the \-c command, and \-cd or -ct would only list today and tomorrow, respectively. The command shown is \-cdl@t55 which stands for show today and 55 days ahead starting from tomorrow.  

  
You can find all range modifiers [here](http://www.delorie.com/gnu/docs/gcal/gcal_25.html).  
  

Change of the date format. If you are a tinkerer, you probably don't like the default time representation. I don't I prefer to get output as YYYYMMDD without any separation. It can be easily pasted into file names to have them quickly sorted by date.  
  
How to change it? As usual, you can invoke gcal with a change for that. An example could be \--date-format='%>3w#K%1%Y%>02\*M%>02\*D%2' I can hear you saying d'oh! But it is not as bad as it seems. It breaks down as  

> %>3w#K 3 letters of the weekday  
> %1 Start highlighting  
> %Y Year number  
> %>02\*M Fix 2 digits in month number  
> %>02\*D Fix 2 digits in month day number  
> %2 End highlighting.

Not as bad as it looked like? You can find all descriptions for this [here](http://www.delorie.com/gnu/docs/gcal/gcal_8.html) (bottom).  

  

[![](http://3.bp.blogspot.com/_f3d3llNlZKQ/S8CaqYzD-VI/AAAAAAAACF8/pyVY9Txtedk/s400/Selection_002.png)](http://3.bp.blogspot.com/_f3d3llNlZKQ/S8CaqYzD-VI/AAAAAAAACF8/pyVY9Txtedk/s1600/Selection_002.png)  
Click to enlarge  
  

Change fixed date header list. That fixed date list heading is pretty ugly, don't you think? What happens when you call Gcal with \--heading-text="%3 %Y %U %4"? You can see the output below. It makes for a more appealing view of events. To learn about heading modifiers, look [here](http://www.delorie.com/gnu/docs/gcal/gcal_9.html) (and search for heading).  

  

[![](http://1.bp.blogspot.com/_f3d3llNlZKQ/S8CaqZgpXMI/AAAAAAAACGE/WqFSWgzP6m4/s400/Selection_003.png)](http://1.bp.blogspot.com/_f3d3llNlZKQ/S8CaqZgpXMI/AAAAAAAACGE/WqFSWgzP6m4/s1600/Selection_003.png)  
Click to enlarge  
  

Sample script: sunset and sunrise times. You can save this in astronomical.gcal, and open when you want to know at which time the sun sets or shines. There are a lot of related options, learn more about sun/moon modifiers [here](http://www.delorie.com/gnu/docs/gcal/gcal_72.html). You will need to know your latitude/longitude.  

> ; latitude 41.4798  
> ; longitude 2.3188 for gcal add 2 trailing zeros  
> ; height 0  
> ; Winter time Barcelona: GMT+1 Summer time Barcelona: GMT+2  
>   
> $w=+60  
> $s=+120  
> $v=%2%4  
> $p=0\*d1#999  
>   
> $c=+41.4798+002.3188  
> $x=~Sunrise %o$c,$w | Sunset %s$c,$w ~Daylength %u$c,$w | Nightlength %z$c,$w  
> $y=~Sunrise %o$c,$s | Sunset %s$c,$s ~Daylength %u$c,$s | Nightlength %z$c,$s  
>   
> ; Winter time selector  
> $b=%e#1980 %i0@a#0@b-1  
> b=10sun9  
>   
> ; Summer time selector  
> $a=%e#1980 %e0@a#0@b-1  
> a=03sun9  
>   
> ; What will be written, through selectors.  
> $p $a $x  
> $p $b $y

And the output of gcal --resource-file=./astronomical --heading-text="%3 %Y %U %4" --date-format='%>3w#K%1%Y%>02\*M%>02\*D%2' -cdl@t4 is shown in the following screenshot.  

  

[![](http://4.bp.blogspot.com/_f3d3llNlZKQ/S8CarRP4KpI/AAAAAAAACGU/k7VgtDGLbqw/s400/Selection_005.png)](http://4.bp.blogspot.com/_f3d3llNlZKQ/S8CarRP4KpI/AAAAAAAACGU/k7VgtDGLbqw/s1600/Selection_005.png)  
Click to enlarge  

  

This is getting hard... I know, all these commands together are getting increasingly harder to write or comment. If you happen to use or call a specific command really often, you can call gcal -list-of-commands-really-long -S name and it will output that call into a executable shell script that when invoked calls Gcal with said options. This one is great!  

  

I hope you enjoyed this small tutorial on Gcal. Please also read the one I used as a guide (which covers a few more things I ommited), and refer to Gcal's documentation if in doubt. If you liked this post, consider sharing it with your favourite tool (Stumble, reddit, digg, mail). Thanks!  
  
Next week I'll show you how to use sed to add colours to your events, and how to set at to send you an email every day with your scheduled tasks. You can see a sample from my colour scheme below.  
  

  

[![](http://3.bp.blogspot.com/_f3d3llNlZKQ/S8YYKcfBkRI/AAAAAAAACKA/nCoRaY-Q_So/s400/Selection_010.png)](http://3.bp.blogspot.com/_f3d3llNlZKQ/S8YYKcfBkRI/AAAAAAAACKA/nCoRaY-Q_So/s1600/Selection_010.png)  

  
Related posts:  
![](http://3.bp.blogspot.com/_f3d3llNlZKQ/S-VA4aF2G1I/AAAAAAAACT8/41SMm6kvdqs/s00/favicon.png) [sed (stream editor) to colorise script output in Linux](http://www.mostlymaths.net/2010/04/sed-stream-editor-to-colorise-script.html)  
![](http://3.bp.blogspot.com/_f3d3llNlZKQ/S-VA4aF2G1I/AAAAAAAACT8/41SMm6kvdqs/s00/favicon.png) [Unpacking my Ben NanoNote](http://www.mostlymaths.net/2010/03/unpacking-my-ben-nanonote.html)  
![](http://3.bp.blogspot.com/_f3d3llNlZKQ/S-VA4aF2G1I/AAAAAAAACT8/41SMm6kvdqs/s00/favicon.png) [My first port to the Ben NanoNote: gnugo](http://www.mostlymaths.net/2010/04/my-first-port-to-ben-nanonote-gnugo.html)  
![](http://3.bp.blogspot.com/_f3d3llNlZKQ/S-VA4aF2G1I/AAAAAAAACT8/41SMm6kvdqs/s00/favicon.png) [Another Ben Nanonote port: pmars](http://www.mostlymaths.net/2010/04/another-ben-nanonote-port-pmars.html)  
![](http://3.bp.blogspot.com/_f3d3llNlZKQ/S-VA4aF2G1I/AAAAAAAACT8/41SMm6kvdqs/s00/favicon.png) [Nanonote ports: Yacas, 4th (forth compiler and interpreter)](http://www.mostlymaths.net/2010/05/nanonote-ports-yacas-4th-forth.html)  

ParseList(ScrambleList(Relateds(Linux)),5)
