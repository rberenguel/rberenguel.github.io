---
title: 'NanoNote ports: Yacas & 4th (Forth interpreter, compiler)'
date: 2010-05-06T16:00:00.002+02:00
draft: false
tags : [Linux, NanoNote]
---

Last saturday I was in a porting mood, and tackled two interesting packages to have in the [Ben NanoNote](http://www.mostlymaths.net/2010/03/unpacking-my-ben-nanonote.html): yacas and 4th.  
  
[Yacas](http://en.wikipedia.org/wiki/Yacas) (Yet Another Computer Algebra System) is a very interesting application to have in such a small device. The best calculator I have used is my old faithful [HP49g](http://en.wikipedia.org/wiki/Hp49g#HP_49G). But in these days, it is bulky, heavy and slow. It was superseded by [m48](http://www.mksg.de/m48/m48.html) (a HP48+ emulator) inside my iPod Touch. Quite nice: the HP48 is programmable, has graphing capabilities and quite a good computer algebra system.  
  
However, the NanoNote is a computer. It has a fully featured (fully as in you can put whatever you want in it, if you are able to do so) operating system, and as such, can hold far more than a pocket calculator. And it has a real keyboard, not a fake touch keyboard as in the iTouch or a (horrible) plastic keyboard like the HP49g.  
  
It turned out to be easier than I expected. The process needs a previous step, like [Gnugo](http://www.mostlymaths.net/2010/04/my-first-port-to-ben-nanonote-gnugo.html) did. You have to compile it in your host system, and then use an intermediately generated file to cross-compile. I am almost done in writing a completely automatic Makefile that handles everything for you. As it stands, it is quite messy moving files around, but the program is usable.  
  
The other, [4th](http://directory.fsf.org/project/4tH/) is a multi-platform [Forth](http://en.wikipedia.org/wiki/Forth_%28programming_language%29) interpreter and compiler. My first try of porting a Forth system was [gforth](http://www.gnu.org/software/gforth/), but it didn't work: gforth compiles itself (more or less), and in a cross-compilation process this is really hard to handle. The developers even acknowledge it in the INSTALL file.  
  
Fortunately, 4th is easy to cross-compile on purpose and indeed, it worked like a charm. I didn't need to do anything more than write the Makefile and copying the libraries to the Nano afterwards. I'm also halfway writing a decent Makefile that copies these libraries where 4th can find them in the Nano.  
  

Related posts:  
 [![](http://3.bp.blogspot.com/_f3d3llNlZKQ/S-VA4aF2G1I/AAAAAAAACT8/41SMm6kvdqs/s00/favicon.png) Gcal: the ultra-powerful command line GNU calendar](http://www.mostlymaths.net/2010/04/gcal-ultra-powerful-command-line-gnu.html)  
![](http://3.bp.blogspot.com/_f3d3llNlZKQ/S-VA4aF2G1I/AAAAAAAACT8/41SMm6kvdqs/s00/favicon.png) [Unpacking my Ben NanoNote](http://www.mostlymaths.net/2010/03/unpacking-my-ben-nanonote.html)  
![](http://3.bp.blogspot.com/_f3d3llNlZKQ/S-VA4aF2G1I/AAAAAAAACT8/41SMm6kvdqs/s00/favicon.png) [My first port to the Ben NanoNote: gnugo](http://www.mostlymaths.net/2010/04/my-first-port-to-ben-nanonote-gnugo.html)  
![](http://3.bp.blogspot.com/_f3d3llNlZKQ/S-VA4aF2G1I/AAAAAAAACT8/41SMm6kvdqs/s00/favicon.png) [Another Ben Nanonote port: pmars](http://www.mostlymaths.net/2010/04/another-ben-nanonote-port-pmars.html)  
ParseList(ScrambleList(Relateds(Linux, Programming)),10)
