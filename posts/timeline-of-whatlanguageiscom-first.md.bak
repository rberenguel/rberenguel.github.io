---
title: 'Timeline of whatlanguageis.com: first Django project'
date: 2012-06-12T15:10:00.000+02:00
draft: false
tags : [Programming, Python, Languages, Django]
---

Note from 2020: The domain mentioned in the post is no longer active (or mine at least), I cancelled this project some time ago

Last week I wrote about [~whatlanguageis.com~](), my first simple try at creating a Django powered site. How did it came to be?

  

In the last few months have been writing and thinking about several ideas to process social data with Python, undoubtedly motivated by the great book [Mining the Social Web](http://www.amazon.com/Mining-Social-Web-Analyzing-Facebook/dp/1449388345/?ie=UTF8&tag=rbersblog-20). In the back of my mind, I wanted my code to work as a web application (either for me or for others,) and thought that I should comply with everyone else, _learn PHP_ and try to _make Python and PHP be friends_. **Of course, this is like getting a Eskimo to talk to a Polynesian. It may work, but needs a lot of set-up from both sides.**

[![](http://2.bp.blogspot.com/-1FYmEKTYxG8/T9c4bAM38TI/AAAAAAAADfA/nW0uzCEeEyw/s200/PythonCool.jpg)](http://2.bp.blogspot.com/-1FYmEKTYxG8/T9c4bAM38TI/AAAAAAAADfA/nW0uzCEeEyw/s1600/PythonCool.jpg)

This suggests the next question: why _me_, PHP? Well, where I work the _de facto_ language for web development is PHP. I'm not a developer there, I just do the data analytics and whatever else that needs to be done using the tools I need and just report back. I thought that PHP-ing would help me get it in the workflow. But, even if my mother programming language may be C (although my first words were in GW-Basic,) my languages of choice are _Python_ and _Lisp_ (and I have a great fondness for _Forth_.) I guess you realise how ugly I feel PHP is.

  

On **29th May** I decided enough was enough: if it is something that should almost work as a black box, to automate the part I was already doing with Python code and R data churning, why bother? _Just make it work_. I started reading the free, [online Django Book](http://djangobook.com/), and I was hooked (you can [buy a printed copy in Amazon](http://www.amazon.com/The-Definitive-Guide-Django-Development/dp/143021936X/?ie=UTF8&tag=rbersblog-20)). It is an awesomely readable book. I had just finished reading Zed Shaw's [Learn Python the Hard Way](http://learnpythonthehardway.org/book/) to find things I may not know yet (for example, unit testing... silly me) and Django felt just like an extension of what I usually write and what I had read. Views, urls, models, all have this Python feeling. For me, of course, I'm not a seasoned Python developer at all. I don't even consider myself as seasoned in any programming language, I just know _I can write code as I need_. But no expert.

  

I read the first 2 chapters very quickly, and on **Wednesday 30** I started testing how Django worked, basic view-url combinations and a test on templating. Just the _hello world_ tests, so to say. I set aside the book while I was thinking what would made a good initial project.

  

Related to my social media endavours I had a tickling question: **How do I decide if a twitter user data is valid or not?** I.e. if I want to do some kind of language analysis, **I need to know the user 's language**. I had a simple _idea_ around that week (I think it was Monday 28,) but didn't get to code it until the **4th of June** (Monday): you can read about it in [Language detection in Python with NLTK and Stopwords](http://www.mostlymaths.net/2012/06/language-detection-in-python-with-nltk.html).

  

On **Tuesday 5**, after work I created the Django project _whatlanguageis_ in my computer, and read the chapter on _Forms_. Created a very basic stripped HTML (I think I didn't even add a head section...) page where I could enter some text and get a language as a reply from the Django test server. Yay! It was very easy to do: Django does a lot of heavy lifting and this was straightforward to code.

  

[![](http://2.bp.blogspot.com/-k5MB05tDRPc/T9c404JWOLI/AAAAAAAADfI/vGDJY-zjiVY/s200/Django.jpg)](http://2.bp.blogspot.com/-k5MB05tDRPc/T9c404JWOLI/AAAAAAAADfI/vGDJY-zjiVY/s1600/Django.jpg)

Then on **Wednesday 6** I took the day slightly off (only answering to urgent emails and sales enquiries) and wrote the whole site [~whatlanguageis.com~](), which involved:

*   **Reading** the chapter on _Models_ to add a little database of affiliate books, **checking** how it works
*   **Reading** the chapter on the _Admin_ interface to add some books easily, **checking** it
*   **Reading** the chapter on _Deployment_...
*   ... which involved a lot of VirtualHost **tinkering** with my httpd.conf file
*   **Purchasing** a domain and setting up the DNS records
*   **Designing** the page (this was the quickest part, Twitter Bootstrap to the rescue)

My initial plan for Wednesday was not of doing everything and not working. My original plan was just to hook the database and check I could read and write the data as expected, forcing me to read the _Models_ chapter. But as soon as I had finished this hooking and checking, the site was almost ready, needing only a neat dressing. Some twitter bootstrap and css-arrows later, the site was working wonderfully in my local machine. Getting it to work in my remote machine was trickier, due to the setup of static files in Django. It's not hard, it is just that it is tricky to find where it fails when it does. In any case, I got it working.

  

Of course, as I have said a lot of times, [~whatlanguageis.com~]() currently is just a **proof of concept** of two things: **_language detection_** and **_setting up a Django site_**. Both worked very well, but now I have to sit down and **refactor** the whole of it. 

  

[![](http://3.bp.blogspot.com/-EL1-p6mhIRI/T9c5NFdhvPI/AAAAAAAADfQ/Icd8Vy9h5xE/s200/YEAH.jpg)](http://3.bp.blogspot.com/-EL1-p6mhIRI/T9c5NFdhvPI/AAAAAAAADfQ/Icd8Vy9h5xE/s1600/YEAH.jpg)

  

The site works well as it is (no need of much refactoring except for the needed changes in _views_), but the language detector needs a proper module, unit tests and a huge revamping. Among others, my **future plans for [~whatlanguageis.com~]()** include:

*   **Adding a lot of languages**. More or less I will reuse the ideas from an old post: [The 100 most common words in Icelandic, automatically generated from Wikipedia](http://www.mostlymaths.net/2010/05/100-most-common-words-in-icelandic-more.html)
*   Add the ability to also detect **programming languages** (or at least, the most common)
*   Probably add the ability to **detect language families** (i.e. when unsure, classify as Scandinavian, or classify as Lisp-like)
*   **Improve the results**: Unless the analyzer is completely sure I want to know what it could be (i.e. for very close languages like Norwegian Bokmål and Danish detection is hard, thanks to [@qimarc](https://twitter.com/#!/qimarc) for this specific and useful example)
*   Add **checks for word diversity** in the received text
*   **Unit-test** all the things!

  

[![](http://1.bp.blogspot.com/-KnK868L5eNE/T9c5TjdAQRI/AAAAAAAADfY/6UdQ4YGNrPw/s320/UnitTest.jpg)](http://1.bp.blogspot.com/-KnK868L5eNE/T9c5TjdAQRI/AAAAAAAADfY/6UdQ4YGNrPw/s1600/UnitTest.jpg)

  

I hope you enjoyed [~whatlanguageis.com~] tale and liked the memes lying around. Somehow I felt this post needed them. Thanks to [memegenerator.net](http://memegenerator.net/) for the ability to create them :)
