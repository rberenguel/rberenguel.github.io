---
title: "New Keyboard: Gergo"
date: 2020-01-06T18:15:52+01:00
draft: false
dropcap: true
featured_image: "gergo.jpg"
tags : [Keyboard, Hardware, Mac, Productivity]
---
My girlfriend likes to joke/complain that I have more keyboards than hands. And indeed, I have probably a dozen or so different keyboards, most of them bluetooth. But, I have found the best one for the day-to-day work (sadly it is not bluetooth). It is a [Gergo](https://www.gboards.ca/product/gergo).

<!--more-->

{{< figure src="gergo.jpg" class="fig-wide" caption="Gergo says hi">}}

A few months ago I had a sudden bout of wrist/finger pain on my right arm. That's not new: 3 years ago I [learned Colemak](https://mostlymaths.net/2016/12/2016-in-review.html/) to help with it (it did), but still on occasion my elbow nerves play funny and I need to stretch more than usual. This time I decided it was enough. Checked all keyboard recommendations, and it sounded like a split keyboard could help. 

After a lot of checking of different models ([Mitosis](https://flashquark.com/product/gb-mitosis-wireless-split-ergonomic-keyboard-w-acrylic-case/), [Keyboardio](https://shop.keyboard.io), [Iris](https://keeb.io/products/iris-keyboard-split-ergonomic-keyboard?variant=29480467267678)) I found out the [Gergo](https://www.gboards.ca/product/gergo). It had some interesting properties:

- Customizable with [QMK firmware](https://config.qmk.fm/#/gergo/LAYOUT_gergo) (more on this later)
- Relatively cheap (cheaper than most, on par with others, nice looking, unexpensive shipping)
- You can buy a pre-built kit

The last one is fundamental, since I know that if I need to assemble anything (no matter how fun it can be) it will sit undone for months or years.

I've been using my Gergo for more than a month already, and now is the time to share how the ride has been.

## QMK

QMK is the Swiss-army knife grade firmware for keyboards. It lets you customise _a lot of things_, both by writing your own code and extensions and also comes with a graphical system you can use online (_not in Safari_). 

Customising everything may soundâ€¦ okay-ish, but painful. Why not use the defaults? Defaults are fine when you do default things, but a Gergo is a split, weird, 50-keys keyboard. Unless you tweak it to your liking, it's going to be a pain. But once configured, this little thing is capable of _a lot_.

### What does QMK offer?

In short, high customisation. For instance, QMK offerst _layers_, that you can switch to with modifiers. Think of them as shifted keys: pressing a modifier gets you to a different layer. Even without going into the firmware and going crazy, I have set up my Gergo to:

- Have conditional modifier keys. So, TAB doubles as Hyper (Cmd-Ctrl-Alt), and space doubles as switch-to-layer-1
- Be able to work one-handed. For no specific reason, I can use my Gergo using only the right side.
- Be as similar as possible to a "normal-ish" QWERTY. This may sound surprising, but my layout is still relatively close to normal. Except for `-`, `[]`, `{}`, the rest of the symbols are pretty much where you'd expect them in a normal keyboard
- Have a dedicated key (in the second layer) to bring up the emoji switcher. I never remember the proper keypress for it, now it's built in

The [online configurator](https://config.qmk.fm/#/gergo/LAYOUT_gergo) is easy to use: move keys around and compile the firmware. Once compiled and downloaded, you can flash your keyboard with the [QMK Toolbox](https://github.com/qmk/qmk_toolbox/releases). In the case of the Gergo, you can set it into DFU mode by holding the right-lower blue key (where you'd expect Right Shift to be) while you plug it in.

## This is what my current layout looks like

{{< figure src="L0.jpg" class="fig-full" caption="Layer 0: Typing and basic modifiers">}}

#### Legend and comments
- `LCAG_T(KC_TAB)`: `Command`-`Option`-`Control` when held, `TAB` when pressed. This is what is known as the HYPER key in most Mac circles (QMK calls Hyper all modifiers, including `shift`, at the same time)
- `LCTL_T(KC_GRV)`: Left Control when held, grave/tilde otherwise
- `N/A`: Not mapped to anything (tendency to press it without intending to)
- `LT 1, KC_SPC`: Toggle Layer 1 when held, `SPACE` when pressed
- `LT 2, KC_ESC`: Toggle Layer 2 when held, `ESC` when pressed
- `TO(4)`: Jump to layer 4
- `LT 2, KC_ENT`: Toggle Layer 2 when held, `ENTER` when pressed
- `LT 2, KC_MINS`: Toggle Layer 2 when held, minus/dash when pressed
- `LT 1, KC_SLASH`: Toggle Layer 1 when held, slash/question when pressed

Note that it is a pretty symmetric layout with respect to layer toggling, and otherwise has keys in "expected" places. Also, many layer toggles, you can never have enough?

{{< figure src="L1.jpg" class="fig-full" caption="Layer 1: Symbol base and persistent keys and modifiers">}}

#### Legend and comments
- `LCAG_T(KC_TAB)`: `Command`-`Option`-`Control` when held, `TAB` when pressed
- `LT 2, KC_SPC`: Toggle Layer 2 when held, `SPACE` when pressed
- `LCTL_T(KC_GRV)`: Left `Control` when held, grave/tilde otherwise
- `LCTL(LGUI(KC), SPC)`: Show emoji picker in Mac OS

Note that `hyper`, `shift` and `control` are kept in this layer. This is to allow stacked modifiers, so you can do control-!. Also note that `SPACE`-`'` (with space held) maps to return, which is relatively natural. Holding both spaces switches to layer 2. Symbols are "where you'd expect them", just lower. So, holding `SPACE` has a vibe of "holding `SHIFT`".

{{< figure src="L2.jpg" class="fig-full" caption="Layer 2: Number and arrow base and persistent keys">}}

#### Legend and comments
- `LCAG_T(KC_TAB)`: Command-Option-Control when held, `TAB` when pressed
- `LCTL_T(KC_GRV)`: Left `Control` when held, grave/tilde otherwise

Almost nothing is preserved here: keeping hyper in the number layer allows me to do hyper-4, which I have mapped to screenshot (and shift-hyper-4, mapped to screenshot to disk). VIM home arrows, and volume control are here. Numbers are also where expected, holding two SPACEs or the Layer 2 toggles brings them on.

#### One-handed layout

This is still a work in progress I never use, but is fun to think about it. 

{{< figure src="L4.jpg" class="fig-full" caption="Layer 4: One handed, base layer">}}
{{< figure src="L5.jpg" class="fig-full" caption="Layer 5: One handed, base layer">}}
{{< figure src="L6.jpg" class="fig-full" caption="Layer 6: One handed, symbol layer">}}

And [here](gergo_rberenguel.json) you can find the JSON for it. You can upload it to the Configurator to adapt it to your needs.

## Downsides of a Gergo (or most split keyboards)

- Transport hassle: The Gergo doesn't have a case, so I have been using a Tupperware that more or less fits it neatly. It also fits well inside a [Bellroy Tech Kit](https://bellroy.com/products/tech-kit/ripstop_recycled/light_grey).
- That's it. Once I got used to typing on it (to be fair ortholinear was harder than split), it has been a joy to use.


