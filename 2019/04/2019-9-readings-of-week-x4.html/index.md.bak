---
title: '2019#9 Readings of the week (x4)'
date: 2019-04-07T19:37:00.000+02:00
draft: false
tags : [ReadingsOfTheWeek, Python, Akka, Alloy, Maths, Drawing, Books, Plan9, Apache Spark, Data, Scala, Rust, Fractals, Games]
dropcap: true
affiliate: true
---

You know how you slip once on a habit and everything goes crazy? Well, I‚Äôve been 4 weeks without writing these, so here‚Äôs the accumulated reading from 4 weeks. Because, even if I don‚Äôt write it, I read a lot anyway. Also, there‚Äôs lot of interesting content this ‚Äúweek‚Äù.

<!--more-->

<span class="scaps">Note:</span> This edition contains Rust, food, Scala, functional programming, psychology, Python, likes to nice images, and a bit on procedural generation. Also the books I read these days. Expect a similar wide range in the future as well. You can check all my weekly readings by checking the [tag here](https://www.mostlymaths.net/search/label/ReadingsOfTheWeek) . You can also get these as a weekly newsletter by subscribing [here](http://eepurl.com/geFw7P).


[Stardew Valley and real life labour](https://www.rockpapershotgun.com/2017/02/13/stardew-valley-marriage-work/)
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


I bought [Stardew Valley](https://www.stardewvalley.net/) for iOS during Christmas, after hearing how much Mike Hurley (from the Cortex podcast, and all around the Relay.fm podcasting network) likes it. But, still haven‚Äôt played, maybe this week? (although, Cultist Simulator appeared on iOS last week, and it‚Äôs very engaging, specially on an iPad Pro with a Pencil).

üìö [Superforecasting](https://www.amazon.com/Superforecasting-Science-Prediction-Philip-Tetlock/dp/0804136718/ref=as_li_ss_tl?ie=UTF8&linkCode=ll1&tag=rbersblog-20&linkId=d2e3f57c152ac4926d5e3994dce5fe6e)
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

I‚Äôm undecided on this book. The premise was excellent, the analysis as well, but it was lacking a bit on the ‚Äúhow‚Äù area of superforecasting.

[To Be Lucky, Believe That You Are](http://nautil.us/issue/44/luck/how-to-be-lucky)
-----------------------------------------------------------------------------------

There is something to this, also, more on luck further down. I‚Äôm a lifetime subscriber to [Nautilus](http://nautil.us/), and you should consider becoming one. Their print magazines are beautiful, and the articles always insightful.

[What Working At Stripe Has Been Like](https://www.kalzumeus.com/2019/3/18/two-years-at-stripe/)
------------------------------------------------------------------------------------------------

Anything Patrick McKenzie (patio11) writes is worth reading. Don‚Äôt miss his [Salary Negotiation](https://www.kalzumeus.com/2012/01/23/salary-negotiation) post.

[Cloud Management with Prolog](https://dev.to/davidk01/cloud-management-with-prolog-29d8)
-----------------------------------------------------------------------------------------

Prolog, and its query ability sound ideal for a lot of scenarios. This could very well be one of them, although dumping to SQL could be more useful when working with a team.

[Addition Font](https://litherum.blogspot.com/2019/03/addition-font.html)
-------------------------------------------------------------------------

How to exploit the depths of font description languages to compute. Also has a minor proof on how font rendering (removing some implementation blocks to avoid overflows in font engines) is Turing complete.

[Twitter thread about immutability in Python by Yury Selivanov](https://twitter.com/1st1/status/1090325242432630784)
--------------------------------------------------------------------------------------------------------------------

Some ways you can get pretty much immutability. If you are a functional-ish programmer you‚Äôll value this.

[White gold: the unstoppable rise of alternative milks](https://www.theguardian.com/news/2019/jan/29/white-gold-the-unstoppable-rise-of-alternative-milks-oat-soy-rice-coconut-plant)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

I like the occasional oat milk (I like the taste of oats) or a specific brand of Catalan walnut milk (pairs perfectly with coffee)

[üìö Bad blood](https://www.amazon.com/Bad-Blood/dp/B07CY5D6ZZ/ref=as_li_ss_tl?_encoding=UTF8&qid=1554657909&sr=1-1&linkCode=ll1&tag=rbersblog-20&linkId=6862d00a797f7b91cfebb16769925430)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

To be fair, I got the audiobook version, but it is thrilling. I listened to it in one weekend, and I didn‚Äôt finish earlier because AirPods need recharging.

[Apache Spark 2.4.0 features - array and higher-order functions](https://www.waitingforcode.com/apache-spark-sql/apache-spark-2.4.0-features-array-higher-order-functions/read)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Aside from the move to Scala 2.12, this is for me one of the most significant changes to Spark. Although I haven‚Äôt used these yet, there have been several moments in the past where I needed mapping capabilities over arrays and had to resort to a UDF. They are not hot paths, but knowing how UDFs behave, I‚Äôd get a decent speed up of these parts by moving to a HOF.

[Faster File Distribution with HDFS and S3](https://tech.marksblogg.com/faster-file-distribution-hadoop-hdfs-s3.html)
---------------------------------------------------------------------------------------------------------------------

How to load your data into HDFS is always a key question. Pre-load it? Load it directly with a specific (say, `spark.read`) construct from S3? Here there are some benchmarks of what is more effective, at least for Presto. Results probably extend to Spark et al, since being based over HDFS is the key part.

[Mumble](https://wiki.mumble.info/wiki/Main_Page): the open source VoIP solution
--------------------------------------------------------------------------------

I learnt about Mumble and the Murmur server a few weeks ago. They are a system for very low latency, low bandwidth audio-only (optionally a bit of text) communication. I wonder if it can help me work remotely more effectively (helping with pairing, or with random ‚Äúquick talk‚Äù while avoiding the overhead of a video call under Slack, Skype or Meet). [This](https://news.ycombinator.com/item?id=9199910) Hacker News comment seems to cast it in the correct light.

[La belleza matem√°tica de la naturaleza, en ilustraciones de proporciones √°ureas](https://culturainquieta.com/es/arte/ilustracion/item/14186-la-belleza-matematica-de-la-naturaleza-en-ilustraciones-de-proporciones-aureas-a-mano-alzada.html)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Note this is in Spanish. Served as an excuse to find out about [Rafael Araujo](https://www.rafael-araujo.com/) and his books, [The Golden Ratio: The Divine Beauty of Mathematics](https://www.amazon.com/Golden-Ratio-Divine-Beauty-Mathematics/dp/163106486X/ref=as_li_ss_tl?keywords=rafael+araujo&qid=1554657458&s=books&sr=1-1&linkCode=ll1&tag=rbersblog-20&linkId=b9592bce1749d423d21e29218c429f65) (with text by Gary Meisner) and [Golden Ratio Colouring Book](https://www.amazon.com/Golden-Coloring-Artist-Rafael-Araujo/dp/0646951904/ref=as_li_ss_tl?keywords=rafael+araujo&qid=1554657458&s=books&sr=1-2&linkCode=ll1&tag=rbersblog-20&linkId=cb686151855411d2c0a95cf7107d0828). I have now some of his drawings as backgrounds of my devices. They are gorgeous.

[Barcelona from Above (set of pictures by M√°rton Mogyor√≥sy on Behance)](https://www.behance.net/gallery/74468471/BARCELONA-FROM-ABOVE)
--------------------------------------------------------------------------------------------------------------------------------------

These were my previous device backgrounds. You can also follow [the author](https://www.instagram.com/mogyimarci/) on Instagram (you can also follow [me](https://www.instagram.com/mostlymaths/) but I‚Äôm not that interesting)

[Space Colony Art from the 1970s ‚Äì The Public Domain Review](https://publicdomainreview.org/collections/space-colony-art-from-the-1970s/)
-----------------------------------------------------------------------------------------------------------------------------------------

The 70s were special

[Laws for Communicating Parallel Processes](https://dspace.mit.edu/handle/1721.1/41962)
---------------------------------------------------------------------------------------

A classic paper by Hewitt, the seminal work on actor systems.

[Roguelike Tutorial in Rust + tcod](http://tomassedovic.github.io/roguelike-tutorial/)
--------------------------------------------------------------------------------------

I enjoy playing ASCII based roguelikes from time to time ([DCSS](https://crawl.develz.org/), [CDDA](https://cataclysmdda.org/) or [Dwarf Fortress](http://www.bay12games.com/dwarves/)), writing one would be cool. And yet another excuse/way to learn more Rust.

[Fast and easy high resolution fractals with a pixel shader](http://nuclear.mutantstargoat.com/articles/sdr_fract/)
-------------------------------------------------------------------------------------------------------------------

I stopped generating fractal stuff before using shaders for it was common, so I never got to learn it. Now, I want it back. It was so much fun.

[Python Data Landscape Diagram](https://community.ibm.com/community/user/datascience/blogs/paco-nathan/2019/03/12/a-landscape-diagram-for-python-data)
------------------------------------------------------------------------------------------------------------------------------------------------------

A super-thorough diagram showing the data analysis library landscape in Python, with some words on each technology/library.

[How the UK lost the Brexit battle](https://www.politico.eu/article/how-uk-lost-brexit-eu-negotiation/)
-------------------------------------------------------------------------------------------------------

From Politico. It is super-long, but well worth the read if you are anywhere related to Brexit. This could easily be described as _how not to manage your negotiation deals_.

[Procedural Generation with Wave Function Collapse](https://gridbugs.org/wave-function-collapse/)
-------------------------------------------------------------------------------------------------

Like fractals, procedural generation is something I have always enjoyed (as a concept, as a result and as a programming problem). WFC is a good approach for generating maps, images and anything with ‚Äúrules‚Äù

[Rust Lifetimes for the Uninitialised](http://asquera.de/blog/2018-01-29/rust-lifetimes-for-the-uninitialised/)
---------------------------------------------------------------------------------------------------------------

A thorough introduction to how Rust lifetimes work and how to use them

[Controlling the Spice, Part 3: Westwood‚Äôs Dune](https://www.filfre.net/2018/12/controlling-the-spice-part-3-westwoods-dune/)
-----------------------------------------------------------------------------------------------------------------------------

A short history about how _Dune II_ came to be, and to appear almost at same time than _Dune_. Also, how Westwood (and Dune II) shaped real time strategy from then on.

[Python Patterns](http://python-patterns.guide/)
------------------------------------------------

An analysis of some common patterns (√† la Gang of Four, patterns) when applied to Python

[The Unexpected Philosophical Depths of the Clicker Game Universal Paperclips](https://www.newyorker.com/culture/culture-desk/the-unexpected-philosophical-depths-of-the-clicker-game-universal-paperclips)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

In the clicker realm, I much prefer [SpacePlan](http://jhollands.co.uk/spaceplan/) (or [A Dark Room](http://adarkroom.doublespeakgames.com/), but that‚Äôs not 100% clicker), but UC was interesting.

[Spread the word: the rise of craft butter ‚Äì and how to make your own](https://www.theguardian.com/food/2019/mar/27/spread-the-word-the-rise-of-craft-butter-and-how-to-make-your-own)
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Craft beer, craft bread, craft butter. It‚Äôs hard to come with good quality cream in Spain, though.

[üìö Platt‚Äôs How to Draw Cartoons](https://www.amazon.com/How-Draw-Cartoons-Brian-Platt/dp/0954709209/ref=as_li_ss_tl?ie=UTF8&linkCode=ll1&tag=rbersblog-20&linkId=a4cd9e27e4ddcddd1857e1dbcb2e8c73)
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

A very short and sweet book on drawing cartoonish people. Highly recommended. And I found out the author lives in Hay-on-Wye, given the amount of times we‚Äôve been there I wonder if we‚Äôve crossed our paths.

[Oh, shit, git!](https://ohshitgit.com/)
----------------------------------------

If your local git guru is away, this can save the day.

[UDFs vs Map vs Custom Spark-Native Functions ‚Äì Farox2q ‚Äì Medium](https://medium.com/@F4Qtech/udfs-vs-map-vs-custom-spark-native-functions-91ab2c154b44)
--------------------------------------------------------------------------------------------------------------------------------------------------------

Some benchmarks and code comparisons between UDFs, map and custom spark functions. Sadly, you can‚Äôt implement the latter without using a custom build of Spark, and good luck deploying that to EMR...

[M-16: A Bureaucratic Horror Story](https://www.theatlantic.com/magazine/archive/1981/06/m-16-a-bureaucratic-horror-story/545153/)
----------------------------------------------------------------------------------------------------------------------------------

The surprisingly interesting story about a weapon, the M-16, and how a _lot_ of bad decisions happened because ‚Äúcommittees & politics‚Äù

[Talent vs Luck: the role of randomness in success and failure](https://arxiv.org/pdf/1802.07068.pdf)
-----------------------------------------------------------------------------------------------------

A paper. This model sounds super-interesting, and I want to replicate it in Python as soon as I have a few hours available (meh)

[How to Deal with Difficult People on Software Projects](https://people.neilon.software/)
-----------------------------------------------------------------------------------------

_It‚Äôs funny because it‚Äôs true_

[Machine learning teaches me how to write better AI](http://yieldthought.com/post/95722882055/machine-learning-teaches-me-how-to-write-better-ai)
-------------------------------------------------------------------------------------------------------------------------------------------------

This is an old post, but I have always found it really interesting. I used _Normalised Compression Distance_ once, but I no longer remember the setting (I think it was as part of a decision tree metric, but the details escape me, it was 6 or7 years ago)

[Supervision and error handling in zio, akka, monix](https://blog.softwaremill.com/supervision-error-handling-in-zio-akka-and-monix-part-3-series-summary-abe75f964c2a)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

[Zio](https://github.com/scalaz/scalaz-zio), [Monix](https://monix.io/) and [Akka](https://akka.io/) can be used for similar things (asynchronous execution of streams/‚Äústuff‚Äù). How you handle errors is different though, and sometimes using one for its error handling can make a difference.

[From 48s to 5s - optimizing a 350 line pathtracer in Rust](https://medium.com/@cfsamson/from-48s-to-5s-optimizing-a-350-line-pathtracer-in-rust-191ab4a1a412)
--------------------------------------------------------------------------------------------------------------------------------------------------------------

If you‚Äôve been counting, I‚Äôve been reading a lot of Rust stuff lately. I have always been interested in raytracers/path tracers (wrote one in Lisp ages ago, got up to refraction), so this was a natural fit.

[üìö Software Abstractions](https://www.amazon.com/Software-Abstractions-Logic-Language-Analysis-ebook/dp/B002YNS9MW/ref=as_li_ss_tl?keywords=software+abstractions&qid=1554657817&s=books&sr=1-1&linkCode=ll1&tag=rbersblog-20&linkId=2a2758545045e2cb2fee7997661885bf)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

This ‚Äúweek‚Äù I finished the second edition of Software Abstractions, the book on the Alloy modeling language. It is pretty good. Starts as a light read, but after a while _how_ the language works starts to be a bit too cumbersome. Luckily there‚Äôs an extensive set of examples throughout the book, and an examples section at the end. I‚Äôm itching to model something in Alloy, but I‚Äôm still unsure _what_.

[Remastering Star Trek: Deep Space Nine With Machine Learning](https://captrobau.blogspot.com/2019/03/remastering-star-trek-deep-space-nine.html?m=1)
-----------------------------------------------------------------------------------------------------------------------------------------------------

The result is impressive. And got me to consider installing the app used.

[The Pyrex Glass Controversy That Just Won't Die](https://gizmodo.com/the-pyrex-glass-controversy-that-just-wont-die-1833040962)
--------------------------------------------------------------------------------------------------------------------------------

Surprisingly fascinating story about why Pyrex is of lower quality lately in the States. Lucky for me, in Europe it‚Äôs still fine

[Pinot Joins Apache Incubator](https://engineering.linkedin.com/blog/2019/03/pinot-joins-apache-incubator)
----------------------------------------------------------------------------------------------------------

YAQEE (Yet Another Query Execution Engine). But sounds interesting, and has a nice logo. I‚Äôve seen worse

[How Bluetooth got its name, an interview with Jim Kardach](http://blog.snapeda.com/2019/03/10/how-bluetooth-got-its-name-an-interview-with-jim-kardach/)
---------------------------------------------------------------------------------------------------------------------------------------------------------

Ye olde Harald!

[A Pi-Powered Plan 9 Cluster](https://www.rs-online.com/designspark/a-pi-powered-plan-9-cluster)
------------------------------------------------------------------------------------------------

Plan9 is what Linux could-have-been. It was built for clusters, with file, process, sharing made easy. A long time ago I had a 2-machine cluster (1 Raspberry and a very old laptop), which I used as a storage/sharing files across two Macbooks using Plan9 from User Space syncing into a Venti file server. Ah, those were the days!

[Modern art was CIA 'weapon'](https://www.independent.co.uk/news/world/modern-art-was-cia-weapon-1578808.html)
--------------------------------------------------------------------------------------------------------------

TL;DR: The CIA funded art tours to show the capitalist West still had creativity

[Maya ritual cave ‚Äòuntouched‚Äô for 1,000 years stuns archaeologists](https://www.nationalgeographic.com/culture/2019/03/maya-ritual-balamku-cave-stuns-archaeologists/)
----------------------------------------------------------------------------------------------------------------------------------------------------------------------

My girlfriend majored in History, with a focus on pre-Columbian meso-american history, so I always pay more attention to articles about the area.

[Remembering a Programming Language that Helped Shape the Digital New York Times](https://open.nytimes.com/remembering-a-programming-language-that-helped-shape-the-digital-new-york-times-cd809d707c74)
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

An interesting history tidbit. And a good lesson on why custom-built languages and DSLs are a blessing and a curse.

[üìö Guns, Germs and Steel](https://www.amazon.com/Guns-Germs-Steel-Fates-Societies-ebook/dp/B06X1CT33R/ref=as_li_ss_tl?keywords=guns+germs+and+steel&qid=1554657889&s=books&sr=1-1&linkCode=ll1&tag=rbersblog-20&linkId=6dcd09e339c85744a4723e41f3b7f825)
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

I‚Äôve had this book on my Audible account since... 2014 I think. And actually, I also have the print copy. It was recommend to me by my thesis advisor, and it is indeed a very interesting subject, but there are points when the Audible version is as dull as watching paint dry. I haven‚Äôt read the print version, but consider that before audiobook.

[Final Tagless seen alive](https://blog.softwaremill.com/final-tagless-seen-alive-79a8d884691d)
-----------------------------------------------------------------------------------------------

This is a response to John de Goes‚Äô talk [The death of final tagless](https://uk.droidcon.com/skillscasts/13247-scala-matters). I don‚Äôt have a definite opinion here. I like [free monad](https://softwaremill.com/free-tagless-compared-how-not-to-commit-to-monad-too-early/) approaches, since they make interpreters easy to understand and optimisable ‚Äúeasily‚Äù, on the other hand [Zio](https://github.com/scalaz/scalaz-zio) looks clean, but that‚Äôs as far as I go: I don‚Äôt have a strong opinion either way on final tagless, judge yourself from both sources

[Newsletter](http://eepurl.com/geFw7P)?
---------------------------------------

These weekly posts are also available as a newsletter. These days (since RSS went into limbo) most of my regular information comes from several newsletters I‚Äôm subscribed to, instead of me going directly to a blog. If this is also your case, subscribe by clicking [here](http://eepurl.com/geFw7P).
