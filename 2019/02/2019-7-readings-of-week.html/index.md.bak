---
title: '2019#7 Readings of the week'
date: 2019-02-26T22:54:00.000+01:00
draft: false
tags : [ReadingsOfTheWeek, emacs, Data, Scala, Alloy, TLA+]
dropcap: true
affiliate: true
featured_image: "Ni.gif"
---

Formal methods, Scala, productivity. Expect a similar wide range in the future as well. You can check all my weekly readings by checking the [tag here](https://www.mostlymaths.net/search/label/ReadingsOfTheWeek) . You can also get these as a weekly newsletter by subscribing [here](http://eepurl.com/geFw7P).

<!--more-->

[![](Ni.gif)](Ni.gif)

[Solving Knights and Knaves with Alloy](https://www.hillelwayne.com/post/knights-knaves/)
-----------------------------------------------------------------------------------------

Once you start your journey down the formal methods rabbit hole (which I started with TLA+) you can never stop. This is a _very_ good introduction to Alloy, a modelling language which seems well suited for data structure descriptions (not procedural/step-time models)

[Seeking the Productive Life: Some Details of My Personal Infrastructure](https://blog.stephenwolfram.com/2019/02/seeking-the-productive-life-some-details-of-my-personal-infrastructure/)
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

As much as I don't like Stephen Wolfram, his obsessive take on being productive echoes mine. And that worries me.

[Encryption Key Hierarchies in Alloy](https://cloudbootup.com/post/encryption-key-hierarchies-in-alloy.html)
------------------------------------------------------------------------------------------------------------

Next after the intro above, this is a short post about how you would set up a reasonable hierarchy of keys in an organisation. Something like "Infrastructure team owns infrastructure keys, developers own GitHub" but with more layers. Then you can automatically check somebody has access to stuff, etc. Neat.

[Is your Scala object always a singleton?](https://blog.softwaremill.com/is-your-scala-object-always-a-singleton-cb3fd24a2fd9)
------------------------------------------------------------------------------------------------------------------------------

The guys at [SoftwareMill](https://blog.softwaremill.com/) (excellent technical blog and people) stumbled upon this. The kind of bug that could defeat you, but they succeeded, and documented it for the rest of us.

[Proving Games are Winnable with Alloy](https://www.hillelwayne.com/post/alloy-randomizer/)
-------------------------------------------------------------------------------------------

And the final instalment in this week's formal method extravaganza, how to prove a randomised game (say, Zelda) can be winnable using Alloy.

[Don't Let the Internet Dupe you, Event Sourcing is Hard](https://chriskiehl.com/article/event-sourcing-is-hard)
----------------------------------------------------------------------------------------------------------------

Yep, can totally agree, I've hit some of the roadblocks and fun moments the author shares. As usual, some [HackerNews comments](https://news.ycombinator.com/item?id=19072850) can be enlightening.

[On Being A Senior Engineer](https://www.kitchensoap.com/2012/10/25/on-being-a-senior-engineer/)
------------------------------------------------------------------------------------------------

There are many definitions of what being senior is, but you can't go wrong trying to follow these suggestions

[Hold the front pages: meet the endpaper enthusiasts](https://www.theguardian.com/books/booksblog/2019/jan/24/hold-the-front-pages-meet-the-endpaper-enthusiasts)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------

I'm pretty sure you didn't know there are collectors of endpaper.

[Beating hash tables with trees? The ART-ful radix trie](https://www.the-paper-trail.org/post/art-paper-notes/)
---------------------------------------------------------------------------------------------------------------

A synopsis of a data structure paper, about ART radix tries. They are kind-of-like tries, but try to use less memory.

[Scala pattern matching: apply the unapply](https://medium.com/wix-engineering/scala-pattern-matching-apply-the-unapply-7237f8c30b41)
-------------------------------------------------------------------------------------------------------------------------------------

In case you didn't know how pattern matching works (hint: unapply), this post will tell you.

[buffer-expose emacs package](https://github.com/clemera/buffer-expose/blob/master/README.org)
----------------------------------------------------------------------------------------------

A package released late last week, it helps you navigate your open buffers in a visual way. Pretty neat, and even with my usual 20+ buffers seems to work seamlessly.

[Newsletter](http://eepurl.com/geFw7P)?
---------------------------------------

These weekly posts are also available as a newsletter. These days (since RSS went into limbo) most of my regular information comes from several newsletters Iâ€™m subscribed to, instead of me going directly to a blog. If this is also your case, subscribe by clicking [here](http://eepurl.com/geFw7P).
